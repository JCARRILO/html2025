
    :root{ --azul-osc:#254b5a; --azul:#6e93a8; --beige:#f7ecd9; --card:#e9eef2; --texto:#1a1a1a; --shadow:0 10px 25px rgba(0,0,0,.08); }
    *{box-sizing:border-box}
    body{ margin:0; color:var(--texto); font:16px/1.6 system-ui,-apple-system,Segoe UI,Roboto,Arial; background:#fff; }
    .hero{ background:linear-gradient(#9fb7c6, #b7c8d2 30%, var(--beige) 30%, var(--beige)); padding:48px 20px 24px; }
    .hero .wrap{max-width:1100px;margin:0 auto}
    .kicker{letter-spacing:.08em;text-transform:uppercase;color:var(--azul);}
    .title{ margin:.25rem 0 0; font-weight:800; line-height:1.1; color:var(--azul-osc); font-size:clamp(28px,5vw,44px); }
    .sub{ max-width:62ch; color:#314e5d; margin:12px 0 0; font-size:clamp(14px,2.5vw,18px); }
    .grid{ max-width:1100px; margin:28px auto; padding:0 20px 20px; display:grid; gap:28px; grid-template-columns:1.2fr .8fr; }
    .panel{ background:var(--beige); border-radius:14px; padding:22px; box-shadow:var(--shadow); }
    .heading{ margin:0 0 .25rem; color:var(--azul-osc); font-size:clamp(20px,3vw,26px); }
    .bullets{margin:.5rem 0 0; padding-left:1.2rem}
    .bullets li{margin:.4rem 0}
    .bullets code{background:#fff;border:1px solid #e6e6e6;padding:.1rem .35rem;border-radius:6px}
    .form-card{ background:var(--card); border-radius:16px; padding:18px; box-shadow:var(--shadow); align-self:start; }
    .form-card h3{margin:.25rem 0 10px;color:#3a5566;font-weight:700}
    .field{display:flex;flex-direction:column;margin:10px 0}
    label{font-size:.9rem;color:#3a5566;margin-bottom:6px}
    input,textarea,select{ border:0; outline:0; border-radius:10px; padding:12px 14px; background:#fff; box-shadow:inset 0 0 0 1px #e1e6eb; font:inherit; }
    textarea{min-height:90px; resize:vertical}
    .btn{ margin-top:12px; border:0; border-radius:12px; padding:12px 18px; background:#2f6e93; color:#fff; font-weight:700; cursor:pointer; box-shadow:0 6px 14px rgba(47,110,147,.25); }
    .btn:focus-visible{outline:3px solid #99c1da; outline-offset:2px}
    .help{font-size:.8rem;color:#556;margin-top:6px}
    .help.error{color:#b00020}
    .grid-2{ max-width:1100px; margin:8px auto 48px; padding:0 20px; display:grid; gap:28px; grid-template-columns:1fr 340px; }
    .panel-light{ background:#fff; border:1px solid #efefef; border-radius:14px; padding:22px; box-shadow:var(--shadow); }
    .emoji-box{ display:flex; align-items:center; justify-content:center; font-size:5rem; min-height:260px; border-radius:16px; background:#f7f9fb; border:1px solid #e9eef2; box-shadow:var(--shadow); }
    @media (max-width:900px){ .grid, .grid-2{grid-template-columns:1fr} .form-card{order:-1} }
  </style>
</head>
<body>
  <a href="#contenido" class="visually-hidden" style="position:absolute;left:-9999px;top:auto;width:1px;height:1px;overflow:hidden;">Saltar al contenido principal</a>
  <section class="hero">
    <div class="wrap">
      <p class="kicker">Frontend</p>
      <h1 class="title">La importancia de los formularios en el desarrollo frontend</h1>
      <p class="sub">Los formularios permiten la interacci&oacute;n directa entre el usuario y la aplicaci&oacute;n, facilitando el env&iacute;o de datos.</p>
    </div>
  </section>

  <main id="contenido">`r`n  <section class="grid" aria-label="Elementos y demo">
    <div class="panel">
      <h2 class="heading">Elementos clave de un formulario HTML</h2>
      <ul class="bullets">
        <li><code>&lt;form&gt;</code> Contenedor que engloba todos los campos y controles.</li>
        <li><code>&lt;input&gt;</code> Entrada de datos: texto, email, password y m&aacute;s.</li>
        <li><code>&lt;label&gt;</code> Texto descriptivo asociado a un campo mediante <code>for</code>.</li>
        <li><code>&lt;button&gt;</code> Acci&oacute;n para enviar o resetear el formulario.</li>
      </ul>
    </div>

    <aside class="form-card" aria-labelledby="demo-title">
      <h3 id="demo-title">Demo de formulario</h3>`r`n      <div id="form-status" aria-live="polite" class="help" style="margin:10px 0"></div>
      <form action="#" method="post" novalidate>
        <div class="field">
          <label for="name">Nombre</label>
          <input id="name" name="name" type="text" placeholder="Tu nombre" required minlength="2" autocomplete="name" pattern="^[A-Za-zÃÃ‰ÃÃ“ÃšÃœÃ‘Ã¡Ã©Ã­Ã³ÃºÃ¼Ã±\s'\-]{2,}$" title="Solo letras, espacios, ap&oacute;strofo o guion. M&iacute;nimo 2 caracteres.">
        </div>
        <div class="field">
          <label for="email">Email</label>
          <input id="email" name="email" type="email" placeholder="tunombre@correo.com" required autocomplete="email">
        </div>
        <div class="field">
          <label for="msg">Mensaje</label>
          <textarea id="msg" name="message" placeholder="&iquest;C&oacute;mo podemos ayudarte?" maxlength="500" minlength="5" required title="Escribe al menos 5 caracteres."></textarea>
          <p class="help">M&aacute;ximo 500 caracteres.</p>
        </div>
        <button class="btn" type="submit">Enviar</button>
      </form>
    </aside>
  </section>

  <section class="grid" aria-label="M&aacute;s inputs de formularios">
    <div class="panel">
      <h2 class="heading">M&aacute;s inputs en formularios HTML</h2>
      <ul class="bullets">
        <li><strong>Input de contrase&ntilde;a</strong> oculta los caracteres escritos para proteger la privacidad.</li>
        <li><strong>Input num&eacute;rico</strong> permite solo n&uacute;meros y puede limitarse con <code>min</code>, <code>max</code> y <code>step</code>.</li>
        <li><strong>Input de fecha</strong> abre un selector de calendario nativo para elegir una fecha.</li>
        <li><strong>Input de color</strong> ofrece un selector para escoger un color y devuelve su valor en hexadecimal.</li>
      </ul>
    </div>

    <aside class="form-card" aria-labelledby="more-title">
      <h3 id="more-title">Demo: contrase&ntilde;a, n&uacute;mero, fecha y color</h3>
      <form action="#" method="post" novalidate>
        <div class="field">
          <label for="pwd">Contrase&ntilde;a</label>
          <input id="pwd" name="password" type="password" placeholder="Ingresa una contrase&ntilde;a segura (m&iacute;nimo 6 caracteres)" required minlength="6" autocomplete="new-password" pattern="^(?=.*[A-Za-z])(?=.*\d).{6,}$" title="M&iacute;nimo 6 caracteres, con letras y n&uacute;meros.">
        </div>
        <div class="field">
          <label for="age">Edad</label>
          <input id="age" name="age" type="number" inputmode="numeric" min="0" max="120" step="1" value="18" placeholder="Ingresa tu edad" required title="Ingresa un valor entre 0 y 120.">
        </div>
        <div class="field">
          <label for="birth">Fecha</label>
          <input id="birth" name="date" type="date" value="2024-04-24" placeholder="Selecciona una fecha" required title="Selecciona una fecha v&aacute;lida.">
        </div>
        <div class="field">
          <label for="favcolor">Color</label>
          <input id="favcolor" name="color" type="color" value="#d04a3b" style="height:44px; width:100px; padding:0;" title="Selecciona un color" required>
        </div>
        <button class="btn" type="submit">Probar</button>
      </form>
    </aside>
  </section>

  <section class="grid-2" aria-label="Buenas pr&aacute;cticas y recursos">
    <div class="panel-light">
      <h2 class="heading">Buenas pr&aacute;cticas</h2>
      <ul class="bullets">
        <li><strong>Validaci&oacute;n:</strong> usa atributos como <code>required</code>, <code>minlength</code>, <code>pattern</code> y valida tambi&eacute;n del lado del servidor.</li>
        <li><strong>Accesibilidad:</strong> conecta cada <code>&lt;label&gt;</code> con su campo (<code>for</code>/<code>id</code>), y usa mensajes de error claros.</li>
        <li><strong>Dise&ntilde;o responsivo:</strong> aseg&uacute;rate de que los campos sean c&oacute;modos en m&oacute;vil y escritorio.</li>
      </ul>
    </div>

  </section>

  <section class="grid" aria-label="Fieldset avanzado">
    <div class="panel">
      <h2 class="heading">Ejemplo avanzado: &lt;fieldset&gt; y &lt;legend&gt;</h2>
      <p>Agrupaci&oacute;n sem&aacute;ntica, fieldsets anidados y uso del atributo <code>disabled</code>.</p>

      <form id="fsForm" action="#" novalidate>
        <fieldset>
          <legend>Datos de contacto</legend>

          <div class="field">
            <label for="fs-name">Nombre</label>
            <input id="fs-name" name="fs-name" type="text" required minlength="2" placeholder="Tu nombre" autocomplete="name" pattern="^[A-Za-zÃÃ‰ÃÃ“ÃšÃœÃ‘Ã¡Ã©Ã­Ã³ÃºÃ¼Ã±\s'\-]{2,}$" title="Solo letras, espacios, ap&oacute;strofo o guion. M&iacute;nimo 2 caracteres.">
          </div>

          <div class="field">
            <label for="fs-email">Email</label>
            <input id="fs-email" name="fs-email" type="email" required placeholder="tunombre@correo.com" autocomplete="email" title="Ingresa un correo v&aacute;lido (ej. nombre@dominio.com)">
          </div>

          <!-- Campo inclusivo de g&eacute;nero -->
          <div class="field" id="genderField">
            <label>G&eacute;nero</label>
            <div style="display:flex;gap:.5rem;flex-wrap:wrap">
              <label><input type="radio" name="genero" value="m" required> Hombre</label>
              <label><input type="radio" name="genero" value="f"> Mujer</label>
              <label><input type="radio" name="genero" value="nb"> No binario</label>
              <label><input type="radio" name="genero" value="otro" id="genero-otro"> Otro</label>
              <label><input type="radio" name="genero" value="pref-no-decir"> Prefiero no decir</label>
            </div>
            <div id="genero-especificar" style="margin-top:.5rem;display:none;">
              <label for="genero-text">Especificar</label>
              <input id="genero-text" name="genero_text" type="text" placeholder="&iquest;C&oacute;mo te identificas?" pattern="^[A-Za-zÃÃ‰ÃÃ“ÃšÃœÃ‘Ã¡Ã©Ã­Ã³ÃºÃ¼Ã±\s'\-]{2,}$" title="Usa letras y espacios. M&iacute;nimo 2 caracteres.">
            </div>
          </div>

          <!-- Preferencias -->
          <fieldset aria-labelledby="pref-legend">
            <legend id="pref-legend">Preferencias de contacto</legend>
            <div class="field" style="display:flex;gap:.75rem;flex-wrap:wrap">
              <label><input type="radio" name="contacto" value="email" checked required> Email</label>
              <label><input type="radio" name="contacto" value="telefono"> Tel&eacute;fono</label>
              <label><input type="radio" name="contacto" value="sms"> SMS</label>
            </div>
            <div class="field">
              <label for="pref-hours">Horario preferido</label>
              <select id="pref-hours" name="pref-hours" required>
                <option value="" disabled selected hidden>Selecciona un horario</option>
                <option value="manana">Ma&ntilde;ana</option>
                <option value="tarde">Tarde</option>
                <option value="noche">Noche</option>
              </select>
            </div>
          </fieldset>

          <!-- Intereses -->
          <fieldset aria-labelledby="intereses-legend">
            <legend id="intereses-legend">&Aacute;reas de inter&eacute;s</legend>
            <p class="help">Selecciona todos los temas que te interesen.</p>
            <div class="field" style="display:flex;gap:.75rem;flex-wrap:wrap">
              <label><input type="checkbox" name="intereses" value="frontend"> Frontend</label>
              <label><input type="checkbox" name="intereses" value="backend"> Backend</label>
              <label><input type="checkbox" name="intereses" value="fullstack"> Full-Stack</label>
              <label><input type="checkbox" name="intereses" value="ux"> UX/UI</label>
              <label><input type="checkbox" name="intereses" value="accesibilidad"> Accesibilidad</label>
              <label><input type="checkbox" name="intereses" value="performance"> Performance</label>
              <label><input type="checkbox" name="intereses" value="seo"> SEO</label>
              <label><input type="checkbox" name="intereses" value="devops"> DevOps</label>
              <label><input type="checkbox" name="intereses" value="testing"> Testing</label>
              <label><input type="checkbox" name="intereses" value="seguridad"> Seguridad</label>
              <label><input type="checkbox" name="intereses" value="bases-datos"> Bases de datos</label>
              <label><input type="checkbox" name="intereses" value="mobile"> Mobile</label>
              <label><input type="checkbox" name="intereses" value="cloud"> Cloud</label>
              <label><input type="checkbox" name="intereses" value="ia"> IA</label>
              <label><input type="checkbox" name="intereses" value="otro" id="interes-otro"> Otro</label>
            </div>
            <div class="field" id="interes-esp" style="display:none;margin-top:.5rem">
              <label for="interes-text">Especificar</label>
              <input id="interes-text" name="interes_texto" type="text" placeholder="&iquest;Qu&eacute; otro tema?">
            </div>
            <div class="field" style="display:flex;gap:.5rem;flex-wrap:wrap">
              <button type="button" class="btn" id="interes-todo">Seleccionar todo</button>
              <button type="button" class="btn" id="interes-ninguno">Seleccionar ninguno</button>
            </div>
          </fieldset>

          <!-- Vista previa -->
          <fieldset id="preview" disabled>
            <legend>Previsualizacion (deshabilitado)</legend>
            <p>Los controles en este fieldset estan deshabilitados mientras se muestra la previsualizacion.</p>
            <div class="field">
              <label for="pv-note">Nota</label>
              <input id="pv-note" value="Ejemplo de valor (solo lectura)" />
            </div>
          </fieldset>

          <div style="margin-top:12px;display:flex;gap:.5rem">
            <button class="btn" id="togglePreview" type="button">Habilitar previsualizacion</button>
            <button class="btn" type="submit">Enviar</button>
          </div>
        </fieldset>
      </form>
    </div>
  </section>

    <script>
    // Toggle de previsualizacion con cambio de texto del boton
    (function(){
      const btn = document.getElementById('togglePreview');
      const pv = document.getElementById('preview');
      if(!btn || !pv) return;
      function sync(){ btn.textContent = pv.disabled ? 'Habilitar previsualizacion' : 'Deshabilitar previsualizacion'; }
      btn.addEventListener('click', () => { pv.disabled = !pv.disabled; sync(); });
      sync();
    })();

    // Mostrar/ocultar "Especificar" en Genero
    (function(){
      const cont = document.getElementById('genero-especificar');
      const input = document.getElementById('genero-text');
      const otro = document.getElementById('genero-otro');
      const radios = document.querySelectorAll('input[name="genero"]');
      if(!cont || !radios.length) return;
      function syncGenero(){
        const show = otro && otro.checked;
        cont.style.display = show ? 'block' : 'none';
        if(input) input.toggleAttribute('required', show);
        if(!show && input) input.value = '';
      }
      radios.forEach(r => r.addEventListener('change', syncGenero));
      syncGenero();
    })();

    // Intereses: mostrar "Especificar" y seleccionar todo/ninguno
    (function(){
      const cont = document.getElementById('interes-esp');
      const input = document.getElementById('interes-text');
      const otro = document.getElementById('interes-otro');
      const checks = Array.from(document.querySelectorAll('input[name="intereses"]'));
      const btnAll = document.getElementById('interes-todo');
      const btnNone = document.getElementById('interes-ninguno');
      if(!checks.length) return;
      function sync(){
        const show = !!(otro && otro.checked);
        if(cont) cont.style.display = show ? 'block' : 'none';
        if(input) input.toggleAttribute('required', show);
        if(!show && input) input.value = '';
      }
      checks.forEach(c => c.addEventListener('change', sync));
      if(btnAll) btnAll.addEventListener('click', () => { checks.forEach(c => c.checked = true); sync(); });
      if(btnNone) btnNone.addEventListener('click', () => { checks.forEach(c => c.checked = false); sync(); });
      sync();
    })();

    // Validacion de grupo: intereses (al menos uno)
    function validarIntereses(){
      const grupo = Array.from(document.querySelectorAll('input[name="intereses"]'));
      if(!grupo.length) return;
      const alguno = grupo.some(c => c.checked);
      grupo[0].setCustomValidity(alguno ? '' : 'Selecciona al menos un interes.');
    }

    // Inline errors debajo de cada campo (todas las forms)
    (function(){
      function ensureErrorNode(el){
        const field = el.closest('.field');
        if(!field) return null;
        let n = field.querySelector('.help.error');
        if(!n){
          n = document.createElement('p');
          n.className = 'help error';
          n.setAttribute('aria-live','polite');
          field.appendChild(n);
        }
        return n;
      }
      function msgFor(el){
        const v = el.validity;
        if(v.valid) return '';
        if(v.valueMissing) return 'Este campo es obligatorio.';
        if(v.typeMismatch){
          if(el.type==='email') return 'Ingresa un correo valido.';
          return 'Formato no valido.';
        }
        if(v.tooShort) return 'Minimo ' + (el.getAttribute('minlength')||'') + ' caracteres.';
        if(v.tooLong) return 'Maximo ' + (el.getAttribute('maxlength')||'') + ' caracteres.';
        if(v.patternMismatch){
          const t = el.getAttribute('title');
          return t ? t : 'Formato no valido.';
        }
        if(v.rangeUnderflow) return 'El valor debe ser >= ' + (el.getAttribute('min')||'');
        if(v.rangeOverflow) return 'El valor debe ser <= ' + (el.getAttribute('max')||'');
        if(v.stepMismatch) return 'Usa incrementos validos (step: ' + (el.getAttribute('step')||'') + ').';
        if(v.badInput) return 'Ingresa un valor valido.';
        if(v.customError) return el.validationMessage;
        return 'Valor no valido.';
      }
      function update(el){
        if(el.name === 'intereses') validarIntereses();
        const n = ensureErrorNode(el);
        if(!n) return;
        const m = msgFor(el);
        n.innerHTML = m;
        el.setAttribute('aria-invalid', m ? 'true' : 'false');
      }
      function wire(form){
        const controls = form.querySelectorAll('input, textarea, select');
        controls.forEach(el=>{
          el.addEventListener('input', ()=>update(el));
          el.addEventListener('blur', ()=>update(el));
          update(el);
        });
        form.addEventListener('submit', (e)=>{
          let firstInvalid = null;
          controls.forEach(el=>{
            update(el);
            if(!firstInvalid && !el.checkValidity()) firstInvalid = el;
          });
          if(!form.checkValidity()){
            e.preventDefault();
            if(firstInvalid) firstInvalid.focus();
          }
        });
      }
      document.querySelectorAll('form').forEach(wire);
+      // Estado inicial de intereses
+      validarIntereses();
    })();

    // Envio de demo para fsForm (sin recargar)
    (function(){
      const form = document.getElementById('fsForm');
      if(!form) return;
      form.addEventListener('submit', function(e){
        if(!form.checkValidity()) return;
        e.preventDefault();
        alert('Formulario enviado (demo). Revisa la consola.');
        console.log(Object.fromEntries(new FormData(this).entries()));
      });
    })();
  </script>

</main>`r`n</body>
</html>


